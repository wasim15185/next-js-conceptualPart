{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\WASIM\\\\Desktop\\\\react\\\\NEXT.js\\\\first-project\\\\pages\\\\post.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //Option -1\n//jodi 'withRouter' use kori\n//import { withRouter } from \"next/router\";\n// const post = (props) => <h1>i am POST #{props.router.query.id}</h1>;\n//export default withRouter(post);\n//OR\n//Option-2 ...\n\nconst post = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"i am POST #\", props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this), props.comments.map(commentObj => /*#__PURE__*/_createElement(Comment, _objectSpread(_objectSpread({}, commentObj), {}, {\n    key: commentObj.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    },\n    __self: this\n  })))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 2\n}, this); //ai 'comment component' ta choto tai r alada file kore raklam na eksonge rekhe dilam\n\n\nconst Comment = ({\n  email,\n  body,\n  id\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n    children: email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this)]\n}, id, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 2\n}, this);\n\npost.getInitialProps = async ({\n  query\n}) => {\n  //console.log(query);\n  try {\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`); // console.log(res.data);\n\n    return _objectSpread(_objectSpread({}, query), {}, {\n      comments: res.data\n    });\n  } catch (err) {}\n};\n\nexport default post;","map":{"version":3,"sources":["C:/Users/WASIM/Desktop/react/NEXT.js/first-project/pages/post.js"],"names":["React","Component","axios","post","props","id","comments","map","commentObj","Comment","email","body","getInitialProps","query","res","get","data","err"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEA,MAAMC,IAAI,GAAIC,KAAD,iBACZ;AAAA,0BACC;AAAA,8BAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEED,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAoBC,UAAD,iBACnB,eAAC,OAAD,kCAAaA,UAAb;AAAyB,IAAA,GAAG,EAAEA,UAAU,CAACH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,C,CAQA;;;AACA,MAAMI,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeN,EAAAA;AAAf,CAAD,kBACf;AAAA,0BAEC;AAAA,cAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,UAFD,eAGC;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAHD;AAAA,GAAUN,EAAV;AAAA;AAAA;AAAA;AAAA,QADD;;AAQAF,IAAI,CAACS,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC3C;AACA,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAChB,wDAAuDF,KAAK,CAACR,EAAG,EADhD,CAAlB,CADG,CAIH;;AACA,2CAAYQ,KAAZ;AAAmBP,MAAAA,QAAQ,EAAEQ,GAAG,CAACE;AAAjC;AACA,GAND,CAME,OAAOC,GAAP,EAAY,CAAE;AAChB,CATD;;AAWA,eAAed,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//Option -1\r\n//jodi 'withRouter' use kori\r\n\r\n//import { withRouter } from \"next/router\";\r\n\r\n// const post = (props) => <h1>i am POST #{props.router.query.id}</h1>;\r\n\r\n//export default withRouter(post);\r\n\r\n//OR\r\n\r\n//Option-2 ...\r\n\r\nconst post = (props) => (\r\n\t<div>\r\n\t\t<h1>i am POST #{props.id}</h1>\r\n\t\t{props.comments.map((commentObj) => (\r\n\t\t\t<Comment {...commentObj} key={commentObj.id} />\r\n\t\t))}\r\n\t</div>\r\n);\r\n//ai 'comment component' ta choto tai r alada file kore raklam na eksonge rekhe dilam\r\nconst Comment = ({ email, body, id }) => (\r\n\t<div key={id}>\r\n\t\t{/* {console.log(id)} */}\r\n\t\t<h5>{email}</h5>\r\n\t\t<p>{body}</p>\r\n\t</div>\r\n);\r\n\r\npost.getInitialProps = async ({ query }) => {\r\n\t//console.log(query);\r\n\ttry {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n\t\t);\r\n\t\t// console.log(res.data);\r\n\t\treturn { ...query, comments: res.data };\r\n\t} catch (err) {}\r\n};\r\n\r\nexport default post;\r\n"]},"metadata":{},"sourceType":"module"}