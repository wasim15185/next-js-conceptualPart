{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\WASIM\\\\Desktop\\\\react\\\\NEXT.js\\\\first-project\\\\pages\\\\post.js\",\n    _this = this;\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //Option -1\n//jodi 'withRouter' use kori\n//import { withRouter } from \"next/router\";\n// const post = (props) => <h1>i am POST #{props.router.query.id}</h1>;\n//export default withRouter(post);\n//OR\n//Option-2 ...\n\nvar post = function post(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"i am POST #\", props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, _this);\n};\n\npost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var query, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 9:\n            return _context.abrupt(\"return\", query);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default post;","map":{"version":3,"sources":["C:/Users/WASIM/Desktop/react/NEXT.js/first-project/pages/post.js"],"names":["React","Component","axios","post","props","id","getInitialProps","query","get","res"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,sBAAW;AAAA,8BAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX;AAAA,CAAb;;AAEAF,IAAI,CAACG,eAAL;AAAA,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,QAASA,KAAT;AAAA;AAAA;AAAA,mBAGHL,KAAK,CAACM,GAAN,gEACuCD,KAAK,CAACF,EAD7C,EAHG;;AAAA;AAGfI,YAAAA,GAHe;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAOfF,KAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeJ,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//Option -1\r\n//jodi 'withRouter' use kori\r\n\r\n//import { withRouter } from \"next/router\";\r\n\r\n// const post = (props) => <h1>i am POST #{props.router.query.id}</h1>;\r\n\r\n//export default withRouter(post);\r\n\r\n//OR\r\n\r\n//Option-2 ...\r\n\r\nconst post = (props) => <h1>i am POST #{props.id}</h1>;\r\n\r\npost.getInitialProps = async ({ query }) => {\r\n\t//console.log(query);\r\n\ttry {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n\t\t);\r\n\t} catch (err) {}\r\n\treturn query;\r\n};\r\n\r\nexport default post;\r\n"]},"metadata":{},"sourceType":"module"}