{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\WASIM\\\\Desktop\\\\react\\\\NEXT.js\\\\first-project\\\\pages\\\\post.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //Option -1\n//jodi 'withRouter' use kori\n//import { withRouter } from \"next/router\";\n// const post = (props) => <h1>i am POST #{props.router.query.id}</h1>;\n//export default withRouter(post);\n//OR\n//Option-2 ...\n\nvar post = function post(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"i am POST #\", props.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, _this), props.comments.map(function (commentObj) {\n      return /*#__PURE__*/_jsxDEV(Comment, _objectSpread({}, commentObj), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 2\n  }, _this);\n}; //ai 'comment component' ta choto tai r alada file kore raklam na eksonge rekhe dilam\n\n\nvar Comment = function Comment(_ref) {\n  var email = _ref.email,\n      body = _ref.body,\n      id = _ref.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, _this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 2\n  }, _this);\n};\n\n_c = Comment;\n\npost.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n\n          case 4:\n            res = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, query), {}, {\n              comments: res.data\n            }));\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["C:/Users/WASIM/Desktop/react/NEXT.js/first-project/pages/post.js"],"names":["React","Component","axios","post","props","id","comments","map","commentObj","Comment","email","body","getInitialProps","query","get","res","data"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,sBACZ;AAAA,4BACC;AAAA,gCAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEED,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,UAACC,UAAD;AAAA,0BACnB,QAAC,OAAD,oBAAaA,UAAb;AAAA;AAAA;AAAA;AAAA,eADmB;AAAA,KAAnB,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADY;AAAA,CAAb,C,CAQA;;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,MAAgBN,EAAhB,QAAgBA,EAAhB;AAAA,sBACf;AAAA,4BAEC;AAAA,gBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,aAFD,eAGC;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,aAHD;AAAA,KAAUN,EAAV;AAAA;AAAA;AAAA;AAAA,WADe;AAAA,CAAhB;;KAAMI,O;;AAQNN,IAAI,CAACS,eAAL;AAAA,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AAAA;AAAA;AAAA,mBAGHX,KAAK,CAACY,GAAN,gEACuCD,KAAK,CAACR,EAD7C,EAHG;;AAAA;AAGfU,YAAAA,GAHe;AAAA,6EAOTF,KAPS;AAOFP,cAAAA,QAAQ,EAAES,GAAG,CAACC;AAPZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeb,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//Option -1\r\n//jodi 'withRouter' use kori\r\n\r\n//import { withRouter } from \"next/router\";\r\n\r\n// const post = (props) => <h1>i am POST #{props.router.query.id}</h1>;\r\n\r\n//export default withRouter(post);\r\n\r\n//OR\r\n\r\n//Option-2 ...\r\n\r\nconst post = (props) => (\r\n\t<div>\r\n\t\t<h1>i am POST #{props.id}</h1>\r\n\t\t{props.comments.map((commentObj) => (\r\n\t\t\t<Comment {...commentObj} />\r\n\t\t))}\r\n\t</div>\r\n);\r\n//ai 'comment component' ta choto tai r alada file kore raklam na eksonge rekhe dilam\r\nconst Comment = ({ email, body, id }) => (\r\n\t<div key={id}>\r\n\t\t{/* {console.log(id)} */}\r\n\t\t<h5>{email}</h5>\r\n\t\t<p>{body}</p>\r\n\t</div>\r\n);\r\n\r\npost.getInitialProps = async ({ query }) => {\r\n\t//console.log(query);\r\n\ttry {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n\t\t);\r\n\t\t// console.log(res.data);\r\n\t\treturn { ...query, comments: res.data };\r\n\t} catch (err) {}\r\n};\r\n\r\nexport default post;\r\n"]},"metadata":{},"sourceType":"module"}